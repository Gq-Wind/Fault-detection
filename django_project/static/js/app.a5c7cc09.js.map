{"version":3,"file":"static/js/app.a5c7cc09.js","mappings":"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","sources":["webpack://faultc/./src/App.vue","webpack://faultc/./src/App.vue?7ccd","webpack://faultc/./src/components/LoginPage.vue","webpack://faultc/./src/components/LoginPage.vue?8d24","webpack://faultc/./src/components/HomePage.vue","webpack://faultc/./src/components/HomePage.vue?8b1a","webpack://faultc/./src/components/RegisterPage.vue","webpack://faultc/./src/components/RegisterPage.vue?471c","webpack://faultc/./src/components/AboutPage.vue","webpack://faultc/./src/components/AboutPage.vue?95cc","webpack://faultc/./src/components/WorkPage.vue","webpack://faultc/./src/utils/axios.js","webpack://faultc/./src/utils/auth.js","webpack://faultc/./src/components/WorkPage.vue?c73a","webpack://faultc/./src/components/NotFoundPage.vue","webpack://faultc/./src/components/NotFoundPage.vue?58cd","webpack://faultc/./src/components/TrainModel.vue","webpack://faultc/./src/components/TrainModel.vue?278d","webpack://faultc/./src/components/ModelPrediction.vue","webpack://faultc/./src/components/ModelPrediction.vue?5798","webpack://faultc/./src/components/ResultsPage.vue","webpack://faultc/./src/components/ResultsPage.vue?f2a2","webpack://faultc/./src/router/index.js","webpack://faultc/./src/main.js","webpack://faultc/webpack/bootstrap","webpack://faultc/webpack/runtime/chunk loaded","webpack://faultc/webpack/runtime/compat get default export","webpack://faultc/webpack/runtime/define property getters","webpack://faultc/webpack/runtime/global","webpack://faultc/webpack/runtime/hasOwnProperty shorthand","webpack://faultc/webpack/runtime/make namespace object","webpack://faultc/webpack/runtime/publicPath","webpack://faultc/webpack/runtime/jsonp chunk loading","webpack://faultc/webpack/startup"],"sourcesContent":["<template>\n<div class=\"\">\n  <router-view></router-view>\n</div>\n</template>\n\n<script>\n\n\nexport default {\n  name: 'App',\n  components: {\n   \n  },\n  \n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=0d6c2edd\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=0d6c2edd&lang=css\"\n\nimport exportComponent from \"D:\\\\0故障分类0\\\\FaultClassification\\\\faultc\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<!-- //username作为唯一标识\r\n -->\r\n<!-- 我这边返回的都是json，我把所有错误信息\r\n都写成error_msg\r\n  return JsonResponse({'error_msg': error_msg})\r\n  return HttpResponse(\"登录成功\", status=200)\r\n\r\n\r\n -->\r\n\r\n<template>\r\n    <div class=\"loginpage\">\r\n        <div class=\"login\">\r\n            <router-link to=\"/\" class=\"logo\"><img src=\"../assets/logo.png\" alt=\"\"></router-link>\r\n            <div class=\"topnav\">\r\n                <router-link to=\"/about\" class=\"routerlink\">文档</router-link>\r\n                <router-link to=\"/register\" class=\"routerlink\">注册</router-link>\r\n                <router-link to=\"/\" class=\"routerlink\">首页</router-link>\r\n            </div>\r\n            <form @submit.prevent=\"login\">\r\n                <div class=\"form-group\">\r\n                    <input type=\"text\" v-model=\"username\" placeholder=\"用户名\" />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <input type=\"password\" v-model=\"password\" placeholder=\"密码\" />\r\n                    <div v-if=\"errorMessage\" class=\"tip2\">{{ errorMessage }}</div>\r\n                </div>\r\n\r\n                <button class=\"login-btn\" type=\"submit\">登录</button>\r\n                <p>没有账号？去<router-link to=\"/register\" class=\"routerlink\">&nbsp;注册</router-link></p>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.loginpage {\r\n    width: 1280px;\r\n    height: 700px;\r\n    margin: 0 auto;\r\n    background-image: url('../assets/background.png');\r\n    background-size: cover;\r\n    background-position: center center;\r\n    background-repeat: no-repeat;\r\n    position: relative;\r\n}\r\n\r\n/* \r\n.register {\r\n    position: relative;\r\n\r\n} */\r\n\r\n.logo {\r\n    position: absolute;\r\n    top: 0px;\r\n    left: 0px;\r\n    width: 25%;\r\n}\r\n\r\n.logo img {\r\n    width: 100%;\r\n}\r\n\r\n.topnav {\r\n    position: absolute;\r\n    top: 30px;\r\n    right: 30px;\r\n    width: 100%;\r\n}\r\n\r\n.topnav .routerlink {\r\n    width: 5%;\r\n    border-radius: 10px;\r\n    background-color: transparent;\r\n    overflow: hidden;\r\n    float: right;\r\n    margin-right: 40px;\r\n    color: #fff;\r\n    font-size: 18px;\r\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n    transition: 0.1s;\r\n    text-decoration: none;\r\n}\r\n\r\n.topnav .routerlink:hover {\r\n    border-radius: 10px;\r\n    background-color: #f4f7fb;\r\n    color: #063268;\r\n    font-weight: 600;\r\n}\r\n\r\nform {\r\n    position: absolute;\r\n    top: 150px;\r\n    left: 50px;\r\n    width: 45%;\r\n    padding: 30px;\r\n    box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);\r\n    box-sizing: border-box;\r\n    max-width: 400px;\r\n}\r\n\r\n.form-group {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 20px;\r\n    margin-left: 8%;\r\n    position: relative;\r\n}\r\n\r\ninput {\r\n    /* background-color: rgba(255, 255, 255, 0.1); */\r\n    height: 40px;\r\n    width: 90%;\r\n    /* border-radius: 5px; */\r\n    border: 1px solid #fff;\r\n    border-bottom-color: #ccc;\r\n    font-size: 16px;\r\n    transition: border-color 0.3s ease-in-out;\r\n    max-width: 400px;\r\n}\r\n\r\ninput:focus {\r\n    outline: none;\r\n    border-bottom-color: #4c8bf5;\r\n}\r\n\r\n.security-code-input {\r\n    width: 60%;\r\n}\r\n\r\n.captcha-img {\r\n    margin-left: 20px;\r\n    cursor: pointer;\r\n}\r\n\r\n.login-btn {\r\n    display: block;\r\n    width: 100%;\r\n    max-width: 400px;\r\n    height: 50px;\r\n    background-color: #4c8bf5;\r\n    color: #fff;\r\n    font-weight: bold;\r\n    font-size: 18px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease-in-out;\r\n    margin-top: 50px;\r\n}\r\n\r\n.login-btn:hover {\r\n    background-color: #54a0ff;\r\n}\r\n\r\np {\r\n    margin-top: 30px;\r\n}\r\n\r\np .routerlink {\r\n    text-decoration: none;\r\n    color: #4c8bf5;\r\n}\r\n\r\np .routerlink:hover {\r\n    font-weight: 550;\r\n}\r\n\r\n.tip1,\r\n.tip2,\r\n.tip3,\r\n.tip4 {\r\n    color: rgb(235, 94, 94);\r\n    position: absolute;\r\n    bottom: -15px;\r\n    font-size: 12px;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport { defineComponent, ref } from 'vue';\r\nimport axios from 'axios';\r\nimport router from '@/router';\r\n/* import { removeToken,removeUser, saveToken, saveUser } from '@/utils/auth'; */\r\n\r\n\r\nexport default defineComponent({\r\n    setup() {\r\n        const username = ref('');\r\n        const password = ref('');\r\n        const errorMessage = ref('');\r\n        const formData = new FormData();\r\n\r\n        const login = async () => {\r\n            try {\r\n                formData.append('username', username.value);\r\n                formData.append('password', password.value);\r\n                const response = await axios.post('user/login/', formData);\r\n                const token = response.headers.authorization.split(' ')[1]; // 获取新的 Token 和用户信息\r\n                localStorage.removeItem('username');\r\n                localStorage.removeItem('token');\r\n                /* removeToken();\r\n                removeUser();\r\n                saveToken(token); // 存储新的 Token\r\n                saveUser(username); // 存储用户信息让后端返回用户的名称 */\r\n                localStorage.setItem('username', username.value);\r\n                localStorage.setItem('token', token);\r\n\r\n\r\n                // 将用户信息传递给新页面\r\n                router.push({ path: '/workspace' });\r\n            } catch (error) {\r\n                const errorMsg = error.response.data.error_msg;\r\n                errorMessage.value = errorMsg;\r\n\r\n            }\r\n        };\r\n\r\n        return { username, password, errorMessage, login };\r\n    }\r\n});\r\n</script>","import { render } from \"./LoginPage.vue?vue&type=template&id=b0a48e14&scoped=true\"\nimport script from \"./LoginPage.vue?vue&type=script&lang=js\"\nexport * from \"./LoginPage.vue?vue&type=script&lang=js\"\n\nimport \"./LoginPage.vue?vue&type=style&index=0&id=b0a48e14&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\0故障分类0\\\\FaultClassification\\\\faultc\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-b0a48e14\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"homepage\">\r\n        <div class=\"home\">\r\n            <router-link to=\"/\" class=\"logo\"><img src=\"../assets/logo.png\" alt=\"\"></router-link>\r\n            <div class=\"topnav\">\r\n                <router-link to=\"/about\" class=\"routerlink\" >文档</router-link>\r\n                <router-link to=\"/register\" class=\"routerlink\" >注册</router-link>\r\n                <router-link to=\"/login\" class=\"routerlink\" >登录</router-link>\r\n            </div>\r\n            <h1>Startup</h1>\r\n            <div class=\"introduction\">\r\n                分布式故障分类系统，<br />\r\n                接入多种神经网络和机器学习分布式故障分类算法，<br />\r\n                也可训练自己的专属模型，更快更精准！\r\n            </div>\r\n            <router-link to=\"/workspace\" class=\"login\">创建项目</router-link>\r\n        </div>\r\n        <!-- <div>\r\n            <router-view></router-view>\r\n        </div> -->\r\n    </div>\r\n</template>\r\n<style scoped>\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.homepage {\r\n    margin: 0 auto;\r\n    width: 1280px;\r\n    height: 700px;\r\n    background: url('../assets/homepage1.png') no-repeat;\r\n    background-size: cover;\r\n    position: relative;\r\n\r\n}\r\n\r\n.logo {\r\n    position: absolute;\r\n    width: 25%;\r\n    top: 5px;\r\n    left: 5px;\r\n}\r\n\r\nimg {\r\n    width: 100%;\r\n}\r\n\r\nh1 {\r\n    position: absolute;\r\n    top: 160px;\r\n    left: 100px;\r\n    font-size: 38px;\r\n    font-family: 'Bernhard Fashion BT';\r\n    color: #006ab5;\r\n    font-style: italic;\r\n\r\n}\r\n\r\nh1::after {\r\n    content: '';\r\n    display: block;\r\n    width: 200px;\r\n    border: 1px solid #006ab5;\r\n    margin-top: 8px;\r\n}\r\n\r\n.introduction {\r\n    margin-top: 25px;\r\n    position: absolute;\r\n    top: 250px;\r\n    left: 100px;\r\n    text-align: left;\r\n    color: #adadac;\r\n}\r\n\r\n.login {\r\n    margin-top: 50px;\r\n    width: 140px;\r\n    height: 40px;\r\n    background-color: #183b95;\r\n    position: absolute;\r\n    top: 350px;\r\n    left: 100px;\r\n    text-decoration: none;\r\n    text-align: center;\r\n    line-height: 40px;\r\n    text-decoration: none;\r\n    color: #fff;\r\n    border-radius: 15px;\r\n}\r\n\r\n.login:hover {\r\n    background-color: #2c52b2;\r\n}\r\n\r\n.topnav {\r\n    position: absolute;\r\n    top: 30px;\r\n    right: 30px;\r\n    width: 100%;\r\n}\r\n\r\n.routerlink {\r\n    width: 5%;\r\n    border-radius: 10px;\r\n    background-color: transparent;\r\n    overflow: hidden;\r\n    float: right;\r\n    margin-right: 40px;\r\n    color: #fff;\r\n    font-size: 18px;\r\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n    transition: 0.1s;\r\n    text-decoration: none;\r\n}\r\n\r\n.routerlink:hover {\r\n\r\n    border-radius: 10px;\r\n    background-color: #f4f7fb;\r\n    color: #063268;\r\n    font-weight: 600;\r\n}\r\n</style>\r\n<script>\r\n\r\n</script>\r\n","import { render } from \"./HomePage.vue?vue&type=template&id=3c0d47d2&scoped=true\"\nconst script = {}\n\nimport \"./HomePage.vue?vue&type=style&index=0&id=3c0d47d2&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\0故障分类0\\\\FaultClassification\\\\faultc\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3c0d47d2\"]])\n\nexport default __exports__","<!-- //如果用户名重复，则提示-->\r\n<!-- 加邮箱？？？ -->\r\n<template>\r\n  <div class=\"registerpage\">\r\n    <div class=\"register\">\r\n      <router-link to=\"/\" class=\"logo\"><img src=\"../assets/logo.png\" alt=\"\" /></router-link>\r\n      <div class=\"topnav\">\r\n        <router-link to=\"/about\" class=\"routerlink\">文档</router-link>\r\n        <router-link to=\"/login\" class=\"routerlink\">登录</router-link>\r\n        <router-link to=\"/\" class=\"routerlink\">首页</router-link>\r\n      </div>\r\n      <form @submit.prevent=\"onSubmit\">\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" v-model=\"username\" placeholder=\"输入用户名\" />\r\n          <div v-show=\"!validUsername\" class=\"tip1\">{{ errors.username }}</div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <input type=\"password\" v-model=\"password\" placeholder=\"输入登录密码\" />\r\n          <div v-show=\"!validPassword\" class=\"tip2\">{{ errors.password }}</div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <input type=\"password\" v-model=\"confirmPassword\" placeholder=\"再次输入登录密码\" />\r\n          <!-- <div v-if=\"!validConfirmPassword\" class=\"tip3\">{{ errors.confirmPassword }}</div> -->\r\n          <div v-show=\"password !== '' && confirmPassword !== '' && password !== confirmPassword\" class=\"tip3\">{{\r\n            errors.confirmPassword }}\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <input type=\"text\" v-model=\"securityCode\" placeholder=\"输入验证码\" class=\"security-code-input\" />\r\n          <img :src=\"securityCodeUrl\" alt=\"验证码\" @click=\"refreshSecurityCode\" class=\"captcha-img\" />\r\n          <div v-show=\"securityCodeInvalid\" class=\"tip4\">{{ errors.securityCode }}</div>\r\n        </div>\r\n        <button class=\"register-btn\" type=\"submit\">注册</button>\r\n        <p>已有账号？去<router-link to=\"/login\" class=\"routerlink\">&nbsp;登录</router-link></p>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.registerpage {\r\n  width: 1280px;\r\n  height: 700px;\r\n  margin: 0 auto;\r\n  background-image: url('../assets/background.png');\r\n  background-size: cover;\r\n  background-position: center center;\r\n  background-repeat: no-repeat;\r\n  position: relative;\r\n}\r\n\r\n.logo {\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 25%;\r\n}\r\n\r\n.logo img {\r\n  width: 100%;\r\n}\r\n\r\n.topnav {\r\n  position: absolute;\r\n  top: 30px;\r\n  right: 30px;\r\n  width: 100%;\r\n}\r\n\r\n.topnav .routerlink {\r\n  width: 5%;\r\n  border-radius: 10px;\r\n  background-color: transparent;\r\n  overflow: hidden;\r\n  float: right;\r\n  margin-right: 40px;\r\n  color: #fff;\r\n  font-size: 18px;\r\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri,\r\n    'Trebuchet MS', sans-serif;\r\n  transition: 0.1s;\r\n  text-decoration: none;\r\n}\r\n\r\n.topnav .routerlink:hover {\r\n  border-radius: 10px;\r\n  background-color: #f4f7fb;\r\n  color: #063268;\r\n  font-weight: 600;\r\n}\r\n\r\nform {\r\n  position: absolute;\r\n  top: 150px;\r\n  left: 50px;\r\n  width: 45%;\r\n  padding: 30px;\r\n  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);\r\n  box-sizing: border-box;\r\n  max-width: 400px;\r\n}\r\n\r\n.form-group {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  margin-left: 8%;\r\n  position: relative;\r\n}\r\n\r\ninput {\r\n  /* background-color: rgba(255, 255, 255, 0.1); */\r\n  height: 40px;\r\n  width: 90%;\r\n  /* border-radius: 5px; */\r\n  border: 1px solid #fff;\r\n  border-bottom-color: #ccc;\r\n  font-size: 16px;\r\n  transition: border-color 0.3s ease-in-out;\r\n  max-width: 400px;\r\n}\r\n\r\ninput:focus {\r\n  outline: none;\r\n  border-bottom-color: #4c8bf5;\r\n}\r\n\r\n.security-code-input {\r\n  width: 60%;\r\n}\r\n\r\n.captcha-img {\r\n  margin-left: 20px;\r\n  cursor: pointer;\r\n}\r\n\r\n.register-btn {\r\n  display: block;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  height: 50px;\r\n  background-color: #4c8bf5;\r\n  color: #fff;\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease-in-out;\r\n  margin-top: 50px;\r\n}\r\n\r\n.register-btn:hover {\r\n  background-color: #54a0ff;\r\n}\r\n\r\np {\r\n  margin-top: 30px;\r\n}\r\n\r\np .routerlink {\r\n  text-decoration: none;\r\n  color: #4c8bf5;\r\n}\r\n\r\np .routerlink:hover {\r\n  font-weight: 550;\r\n}\r\n\r\n.tip1,\r\n.tip2,\r\n.tip3,\r\n.tip4 {\r\n  color: rgb(235, 94, 94);\r\n  position: absolute;\r\n  bottom: -15px;\r\n  font-size: 12px;\r\n}\r\n</style>\r\n<script>\r\nimport router from \"@/router\";\r\nimport axios from \"axios\";\r\nimport { ElNotification } from \"element-plus\";\r\nimport { ref, watch, defineComponent } from \"vue\";\r\n\r\nexport default defineComponent({\r\n  setup() {\r\n    const username = ref(\"\");\r\n    const password = ref(\"\");\r\n    const confirmPassword = ref(\"\");\r\n    const securityCode = ref(\"\");\r\n    const securityCodeInvalid = ref(false);\r\n    const formData = new FormData();\r\n\r\n    const errors = {\r\n      username: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      securityCode: ''\r\n    };\r\n    const securityCodeUrl = ref(\"\");\r\n    const validUsername = ref(false);\r\n    const validPassword = ref(false);\r\n    const validConfirmPassword = ref(false);\r\n\r\n    watch(username, async (newValue) => {\r\n      if (newValue.trim() === '') {\r\n        return;\r\n      }\r\n\r\n      const value = newValue.trim();\r\n      const isValidUsername = /^\\w{6,20}$/.test(value)/*  && /^[^\\s]*(\\s+[^\\s]*){0}$/.test(value);//用户名不能存在空格 */\r\n      if (!isValidUsername) {\r\n        errors.username = \"用户名为长度为6-20位的数字和字母的组合\";\r\n        validUsername.value = false;\r\n        return;\r\n      }\r\n      else {\r\n        validUsername.value = true;\r\n        errors.username = '';\r\n      }\r\n      /*\r\n      try {\r\n        const response = await axios.get('/user/register/', { params: { username: value } });\r\n        if (response.data.exist) {\r\n          errors.username = \"用户名已存在\";\r\n          validUsername.value = false;\r\n        } else {\r\n          errors.username = \"\";\r\n          validUsername.value = true;\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    } */\r\n    });\r\n\r\n    watch(password, (newValue) => {\r\n      if (newValue.trim() === '') {\r\n        return;\r\n      }\r\n\r\n      const value = newValue;\r\n      validPassword.value =\r\n        !!value &&\r\n        /^[^\\s]*(\\s+[^\\s]*){0}$/.test(value) && // 判断密码不能有空格\r\n        /(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[^a-zA-Z0-9])[^\\s]{8,16}/.test(value);\r\n      if (!validPassword.value) {\r\n        errors.password = '密码为8-16位数字、字母和特殊字符（不包括空格）';\r\n      }\r\n      else {\r\n        validPassword.value = true;\r\n        errors.password = '';\r\n      }\r\n    });\r\n\r\n\r\n    watch(confirmPassword, (newValue) => {\r\n      if (newValue.trim() === '') {\r\n        return;\r\n      }\r\n      const value = newValue.trim();\r\n      validConfirmPassword.value = !!value && value === password.value;\r\n    });\r\n\r\n    watch([password, confirmPassword], ([newPwd, newConfirmPwd]) => {\r\n      if (newPwd && newConfirmPwd) {\r\n        validConfirmPassword.value = !!newPwd && (newPwd === newConfirmPwd);\r\n\r\n      } else {\r\n        validConfirmPassword.value = false;\r\n        errors.confirmPassword = '两次输入的密码不一致！';\r\n      }\r\n    });\r\n    /* watch(securityCode, (newValue) => {\r\n      if (newValue.trim() === '') {\r\n        return;\r\n      }\r\n      const value = newValue.trim();\r\n      validSecurityCode.value = !!value;\r\n      // 设置验证码位数>=4位(后端设置校验码为4位以上)\r\n      if (value.length >= 4 && fromBackend.value) { // 添加 fromBackend 判断\r\n        axios.get(\"/user/register/\", { code: value })\r\n          .then((response) => {\r\n            securityCodeInvalid.value = !response.data.isValid;\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        securityCodeInvalid.value = false;\r\n        errors.securityCode='验证码错误，请重新输入！';\r\n      }\r\n    });\r\n */\r\n    const refreshSecurityCode = () => {\r\n      axios.get(\"/user/refresh_code\")\r\n        .then((response) => {\r\n          securityCodeUrl.value = response.data.image_url;//response.data后面跟返回的结果\r\n          securityCodeInvalid.value = false;\r\n          securityCode.value = '';\r\n        })\r\n        .catch((error) => {\r\n          const errorMsg = error.response.data.error_msg;\r\n          ElNotification({\r\n            type: 'error',\r\n            message: errorMsg\r\n          })\r\n        });\r\n    };\r\n\r\n    const onSubmit = () => {\r\n      if (\r\n        validUsername.value &&\r\n        validPassword.value &&\r\n        validConfirmPassword.value &&\r\n        securityCode.value /* && */\r\n        /*  fromBackend.value  */// 添加判断验证码是否来自后端生成的有效验证码\r\n      ) {\r\n        formData.append('username', username.value);\r\n        formData.append('password', password.value);\r\n        formData.append('code', securityCode.value);\r\n        axios.post(\"user/register/\", formData)\r\n          .then((response) => {\r\n            console.log(response);\r\n            router.push(\"/login\");\r\n          })\r\n          .catch((error) => {\r\n            if (error.response) {\r\n              // HTTP 错误，获取错误状态码\r\n              // 显示禁止访问错误提示\r\n              const errorMsg = error.response.data.error_msg;\r\n              ElNotification({\r\n                type: 'warning',\r\n                message: errorMsg\r\n              });\r\n            }\r\n          }\r\n          );\r\n      } else {\r\n        alert('niubi')\r\n      }\r\n    };\r\n\r\n    refreshSecurityCode();\r\n\r\n    return {\r\n      username,\r\n      password,\r\n      confirmPassword,\r\n      securityCode,\r\n      errors,\r\n      securityCodeUrl,\r\n      validUsername,\r\n      validPassword,\r\n      validConfirmPassword,\r\n      securityCodeInvalid,\r\n      refreshSecurityCode,\r\n      onSubmit,\r\n    };\r\n  },\r\n});\r\n</script>\r\n","import { render } from \"./RegisterPage.vue?vue&type=template&id=ee88959c&scoped=true\"\nimport script from \"./RegisterPage.vue?vue&type=script&lang=js\"\nexport * from \"./RegisterPage.vue?vue&type=script&lang=js\"\n\nimport \"./RegisterPage.vue?vue&type=style&index=0&id=ee88959c&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\0故障分类0\\\\FaultClassification\\\\faultc\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ee88959c\"]])\n\nexport default __exports__","<template>\r\n    <div>使用文档</div>\r\n</template>","import { render } from \"./AboutPage.vue?vue&type=template&id=5e5f1ac1\"\nconst script = {}\n\nimport exportComponent from \"D:\\\\0故障分类0\\\\FaultClassification\\\\faultc\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\r\n<template>\r\n    <div class=\"WorkPage\">\r\n        <el-container>\r\n            <el-header>\r\n                <router-link to=\"/\" class=\"logo routerlink\"><img src=\"../assets/logo.png\" alt=\"\"></router-link>\r\n                <router-link to=\"/about\" class=\"about routerlink\">使用文档</router-link>\r\n                <span class=\"username\">欢迎，<span @click=\"handleLogout\" class=\"logout\">hhh{{ /* $route.params.username */username }}</span></span>\r\n            </el-header>\r\n            <el-container>\r\n                <el-aside width=\"15%\">\r\n                    <div @click=\"totrain\" exact-active-class=\"active\" active-class=\"active\">训练中心</div>\r\n                    <!-- <router-link to=\"/workspace/RepositoryOfModel\">模型仓库</router-link> -->\r\n                    <div @click=\"totest\" exact-active-class=\"active\" active-class=\"active\">模型预测</div>\r\n                </el-aside>\r\n                <el-main>\r\n                    <div class=\"intomain\">\r\n                        <!--   主页内容，还没想好放啥，随便介绍一下吧 -->\r\n                    </div>\r\n                    <!--   <el-empty description=\"description\" /> -->\r\n                    <router-view></router-view>\r\n                </el-main>\r\n            </el-container>\r\n        </el-container>\r\n    </div>\r\n</template>\r\n<script>\r\nimport {  defineComponent } from 'vue';\r\n/* import { useStore } from 'vuex'; */\r\nimport { logout } from '@/utils/auth'\r\nimport router from '@/router';\r\nexport default defineComponent({\r\n    setup() {\r\n       /*  const store = useStore(); */\r\n       /*  const userName = localStorage.getItem('username') //待定，存的就是一个 */\r\n       const username =localStorage.getItem('username');\r\n        const handleLogout = async () => {\r\n            const success = await logout(); // 调用 logout 函数并等待结果\r\n            if (success) {\r\n                router.push(\"./login\");\r\n            }\r\n            else {\r\n                alert(\"退出失败！请稍后重试！\");\r\n            }\r\n        };\r\n        const totrain=()=>{\r\n            router.push('/TrainModel')\r\n        }\r\n        const totest=()=>{\r\n            router.push('/ModelPrediction')\r\n        }\r\n\r\n        return { /* userName, */ username,handleLogout,totrain,totest };\r\n    },\r\n\r\n})\r\n</script>\r\n<style scoped>\r\n* {\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\n\r\n.routerlink {\r\n    text-decoration: none;\r\n}\r\n.WorkPage\r\n {\r\n    width: 1280px;\r\n    height: 700px;\r\n    margin: 0 auto;\r\n    position: relative;\r\n    background-color: #f7f9fc;\r\n}\r\n.el-container{\r\n    height:100%;\r\n}\r\n\r\n\r\n.el-header {\r\n    background-color: white;\r\n    box-shadow: 0px 2px 12px -4px rgba(0, 0, 0, 0.2);\r\n    height: 60px;\r\n}\r\n\r\n.el-aside {\r\n    background-color: white;\r\n    margin: 10px 10px 0 0;\r\n    height: 100%;\r\n    box-shadow: 0 2px 12px -4px rgba(0, 0, 0, 0.2);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: left;\r\n    color: black;\r\n    font-weight: 600;\r\n}\r\n\r\n.el-main {\r\n    background-color: white;\r\n    margin-top: 10px;\r\n    height: 100%;\r\n    box-shadow: 0 2px 12px -4px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.logo {\r\n    position: absolute;\r\n    top: 0px;\r\n    left: 0px;\r\n    width: 20%;\r\n}\r\n.logo:hover{\r\n    cursor: pointer;\r\n}\r\n\r\n.logo img {\r\n    width: 100%;\r\n}\r\n\r\n.about {\r\n    position: absolute;\r\n    top: 21px;\r\n    right: 200px;\r\n    color: #006ab5;\r\n    font-weight: 500;\r\n    height: 20px;\r\n}\r\n\r\n.username {\r\n    display: inline-block;\r\n    position: absolute;\r\n    top: 20px;\r\n    right: 50px;\r\n    width: 10%;\r\n    text-align: left;\r\n    height: 20px;\r\n    line-height: 20px;\r\n}\r\n\r\n.logout {\r\n    position: absolute;\r\n    display: inline-block;\r\n    width: 50%;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    line-height: 20px;\r\n}\r\n\r\n.logout:hover {\r\n    color: #006ab5;\r\n    cursor: pointer;\r\n}\r\n.active{\r\n    background-color: #50aef2;\r\n}\r\n.el-aside div {\r\n    display: block;\r\n    width: 100%;\r\n    height: 50px;\r\n    line-height: 50px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    color: rgb(39, 38, 38);\r\n    margin-top: 20px;\r\n}\r\n\r\n.el-aside div:hover {\r\n    cursor: pointer;\r\n}\r\n</style>","import axios from 'axios';\r\n/* import { getToken } from '@/utils/auth'; */\r\nconst authInstance = axios.create({\r\n   /*  baseURL: 'http://localhost:8080/', */\r\n    // 其他配置参数\r\n});\r\n\r\n// 在请求拦截器中添加 Authorization 请求头信息\r\nauthInstance.interceptors.request.use(config => {\r\n    const token=localStorage.getItem('token');\r\n    if (token) {\r\n        config.headers.Authorization = `Token ${token}`;\r\n    }\r\n    return config;\r\n}, error => {\r\n    // 错误处理\r\n    return Promise.reject(error);\r\n});\r\n\r\n// 创建一个不带有 Authorization 请求头的 axios 实例\r\nconst noAuthInstance = axios.create({\r\n   /*  baseURL: 'http://localhost:8080/', */\r\n    // 其他配置参数\r\n});\r\nconst { CancelToken } = axios;\r\n// 导出两个 axios 实例\r\nexport { authInstance, noAuthInstance,CancelToken};","/* import store from '@/store'; */\r\nimport { authInstance } from '@/utils/axios'\r\n/* \r\n\r\n//关于用户信息的操作\r\nconst TOKEN_KEY = 'jwt_token';\r\nconst USER_KEY = 'current_user';\r\n\r\nexport function saveToken(token) {\r\n    localStorage.setItem(TOKEN_KEY, token);\r\n}\r\n\r\nexport function getToken() {\r\n    return localStorage.getItem(TOKEN_KEY);\r\n}\r\n\r\nexport function removeToken() {\r\n    return localStorage.removeItem(TOKEN_KEY);\r\n}\r\n\r\nexport function saveUser(username) {//把用户名存进去，后端返回的是一个user数据，其值为用户名\r\n    // 将用户信息存储到 Vuex 中\r\n    store.commit('setUser', username);\r\n    localStorage.setItem(`${USER_KEY}`, JSON.stringify(username));\r\n} */\r\n\r\nexport function isTokenExpired(token) {\r\n    if (!token) {\r\n        return true;\r\n    }\r\n    const tokenParts = token.split('.');\r\n    if (tokenParts.length !== 3) {\r\n        return true;\r\n    }\r\n    const payload = JSON.parse(atob(tokenParts[1]));\r\n    const tokenExpiryDate = new Date(payload.exp * 1000);\r\n    return tokenExpiryDate < new Date();\r\n}\r\n\r\n/* export function getUser() {\r\n    const token = getToken();\r\n    if (token && !isTokenExpired(token)) {\r\n        // 从 Vuex 中获取用户信息\r\n        const { username } = store.state;\r\n        if (username) {\r\n            return { ...username };\r\n        }\r\n    } else {\r\n        // 从本地存储中获取用户信息\r\n        const username = JSON.parse(localStorage.getItem(`${USER_KEY}`));\r\n        if (username) {\r\n            return { ...username };\r\n        }\r\n    }\r\n    return null;\r\n}\r\n//从vuex中清除用户信息\r\nexport function removeUser() {\r\n    store.commit('setUser', null);\r\n} */\r\n\r\n/* //检查用户的登录状态\r\nexport const checkLoginStatus = () => {\r\n    // 向后台发送检查登录状态的请求\r\n    return authInstance.get('user/upload/check-login-status')\r\n        .then(response => {\r\n            return response.data.data.isLoggedIn; // 返回用户的登录状态\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            return false; // 默认返回未登录状态\r\n        });\r\n} */\r\n\r\nexport async function logout() {\r\n    try {\r\n        await authInstance.post('user/logout/')\r\n        /* removeToken(); */\r\n        localStorage.removeItem('token')\r\n        delete authInstance.defaults.headers.common['Authorization'];\r\n       /*  store.commit('removeUser'); */\r\n       localStorage.removeItem('username')\r\n        return true;\r\n\r\n    } catch (error) {\r\n        console.error(error);\r\n        return false;\r\n    }\r\n}\r\n\r\n","import { render } from \"./WorkPage.vue?vue&type=template&id=99cca2ca&scoped=true\"\nimport script from \"./WorkPage.vue?vue&type=script&lang=js\"\nexport * from \"./WorkPage.vue?vue&type=script&lang=js\"\n\nimport \"./WorkPage.vue?vue&type=style&index=0&id=99cca2ca&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\0故障分类0\\\\FaultClassification\\\\faultc\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-99cca2ca\"]])\n\nexport default __exports__","<template>\r\n    <div>\r\n        <h1>404 Not Found!</h1>\r\n        <p>{{ count }}秒后将自动跳转至<router-link to=\"/\">首页</router-link></p>\r\n    </div>\r\n</template>\r\n<script>\r\nimport router from '@/router';\r\nimport { watch, ref } from 'vue';\r\nimport { defineComponent } from 'vue';\r\n\r\nexport default defineComponent({\r\n    setup() {\r\n        let count = ref(5);//将count设置为响应式变量\r\n        const countTime = setInterval(() => {\r\n            count.value--;//在 Vue 3.x 中，在使用响应式数据时需要注意，推荐使用 .value 来访问和修改值，确保能正确地触发响应式更新\r\n        }, 1000);\r\n        watch(count, newCount => {\r\n            if (newCount === 0) {\r\n                clearInterval(countTime);\r\n                router.push('/');\r\n            }\r\n        });\r\n        return { count }\r\n    }\r\n});\r\n</script>\r\n<style scoped>\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\ndiv {\r\n    margin: 50px auto;\r\n}\r\n\r\nh1 {\r\n    margin-bottom: 10px;\r\n}\r\n</style>","import { render } from \"./NotFoundPage.vue?vue&type=template&id=32288e0a&scoped=true\"\nimport script from \"./NotFoundPage.vue?vue&type=script&lang=js\"\nexport * from \"./NotFoundPage.vue?vue&type=script&lang=js\"\n\nimport \"./NotFoundPage.vue?vue&type=style&index=0&id=32288e0a&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\0故障分类0\\\\FaultClassification\\\\faultc\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-32288e0a\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"container\">\r\n        <h3>创建新的训练</h3>\r\n        <!-- 上传文件组件 -->\r\n        <div class=\"data\">\r\n            <el-form>\r\n                <el-form-item label=\"上传文件\">\r\n                    <el-upload ref=\"fileUpload\" :on-change=\"handleFileChange\" :show-file-list=\"false\" :auto-upload=\"false\"\r\n                        accept=\".csv\" :multiple=\"false\">\r\n                        <el-button size=\"small\" type=\"primary\" class=\"choseFile\">选择文件</el-button>\r\n                        <div class=\"el-upload__tip\">支持 .csv 格式文件</div>\r\n                    </el-upload>\r\n                </el-form-item>\r\n            </el-form>\r\n            <!-- 创建训练任务的表单 -->\r\n            <el-form :model=\"form\" ref=\"createForm\" style=\"max-width: 600px;\">\r\n                <el-form-item label=\"选择算法\">\r\n                    <el-radio v-model=\"form.modelName\" :label=\"model.name\" v-for=\"model in models\" :key=\"model.name\">\r\n                        {{ model.name }}\r\n                    </el-radio>\r\n                </el-form-item>\r\n                <el-form-item label=\"模型名称\">\r\n                    <el-input v-model=\"form.userModelName\" placeholder=\"请输入模型名称\"\r\n                        @blur=\"checkModelName\"></el-input><!-- 唯一名称，通过名称保证唯一-->\r\n                </el-form-item>\r\n                <el-form-item label=\"特征值数\">\r\n                    <el-input type=\"number\" v-model=\"form.featuresNum\" placeholder=\"请输入特征值数\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"标签范围\">\r\n                    <el-input type=\"number\" v-model=\"form.labelsNum\" placeholder=\"请输入标签范围\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"createTrain\">确定创建</el-button>\r\n                    <el-button @click=\"cancel\">取消创建</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </div>\r\n\r\n\r\n        <h3 style=\"margin-top:20px;margin-bottom:10px\">训练进程展示</h3>\r\n        <!-- 展示训练任务的列表 -->\r\n        <el-table :data=\"trainTasks\" style=\"max-width: 1024px;\" :header-cell-style=\"{ backgroundColor: '#f5f7fa' }\">\r\n            <el-table-column prop=\"name\" label=\"训练任务\"></el-table-column>\r\n            <el-table-column prop=\"status\" label=\"训练状态\">\r\n                <template #default=\"{ row }\">\r\n                    <span v-if=\"row.status === ''\">等待中</span>\r\n                    <span v-else-if=\"row.status === 'in_progress'\">训练中</span>\r\n                    <span v-else-if=\"row.status === 'terminated'\">已取消</span>\r\n                    <span v-else-if=\"row.status === 'exception'\">训练失败</span>\r\n                    <span v-else-if=\"row.status === 'success'\">已完成</span>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"startTime\" label=\"开始时间\"></el-table-column>\r\n            <el-table-column label=\"Accuracy\">\r\n                <template #default=\"{ row }\">\r\n                    <span v-if=\"row.status === 'success'\">{{ row.accuracy }}</span>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"MacroF1\">\r\n                <template #default=\"{ row }\">\r\n                    <span v-if=\"row.status === 'success'\">{{ row.loss }}</span>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\">\r\n                <template #default=\"{ row }\">\r\n                    <el-button v-if=\"row.status === 'success'\" type=\"primary\" :href=\"modelURL\"\r\n                        @click=\"downloadModel(row.id)\">下载模型</el-button>\r\n                    <!--  <el-button v-if=\"row.status === 'in_progress'\" type=\"danger\"\r\n                        @click=\"cancelTrain(row.id)\">取消训练</el-button> -->\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive, ref, } from \"vue\";\r\n/* import { onUnmounted } from \"vue\"; */\r\nimport { ElNotification } from \"element-plus\";\r\nimport { authInstance } from \"@/utils/axios\";\r\n/* import { getUser,getToken } from \"@/utils/auth\"; */\r\nimport router from '@/router'\r\n\r\nexport default {\r\n    name: \"TrainingPage\",\r\n    setup() {\r\n        const models = reactive([\r\n            { name: 'SVM' },\r\n            { name: 'RandomForest_K' },\r\n            { name: 'CNN' },\r\n            { name: 'SVM_K' }\r\n        ]); // 存储可用的模型列表\r\n        /*  let fileData = ref([]); // 暂存上传文件 */\r\n        let formData = new FormData(); // 用于发送 POST 请求的 FormData\r\n        /*  const selectedFileName = ref(''); // 选中的文件名 */\r\n        let trainTasks = reactive([\r\n            /* {\r\n                id: 1,\r\n                name: 22,//用户模型的名字\r\n                status: \"success\",//训练状态，包括InProgress、Canceled、Failed、success\r\n                startTime: 2020,//训练开始的时间\r\n                accuracy: 2, // 还未完成训练，准确率为 0\r\n                loss: 1, // 还未完成训练，损失值为 0\r\n            },\r\n            {\r\n                id: 1,\r\n                name: 22,//用户模型的名字\r\n                status: \"success\",//训练状态，包括InProgress、Canceled、Failed、success\r\n                startTime: 2020,//训练开始的时间\r\n                accuracy: 2, // 还未完成训练，准确率为 0\r\n                loss: 1, // 还未完成训练，损失值为 0\r\n            },\r\n            {\r\n                id: 1,\r\n                name: 22,//用户模型的名字\r\n                status: \"success\",//训练状态，包括InProgress、Canceled、Failed、success\r\n                startTime: 2020,//训练开始的时间\r\n                accuracy: 2, // 还未完成训练，准确率为 0\r\n                loss: 1, // 还未完成训练，损失值为 0\r\n            },\r\n            {\r\n                id: 1,\r\n                name: 22,//用户模型的名字\r\n                status: \"success\",//训练状态，包括InProgress、Canceled、Failed、success\r\n                startTime: 2020,//训练开始的时间\r\n                accuracy: 2, // 还未完成训练，准确率为 0\r\n                loss: 1, // 还未完成训练，损失值为 0\r\n            },\r\n            {\r\n                id: 1,\r\n                name: 22,//用户模型的名字\r\n                status: \"success\",//训练状态，包括InProgress、Canceled、Failed、success\r\n                startTime: 2020,//训练开始的时间\r\n                accuracy: 2, // 还未完成训练，准确率为 0\r\n                loss: 1, // 还未完成训练，损失值为 0\r\n            },\r\n            {\r\n                id: 1,\r\n                name: 22,//用户模型的名字\r\n                status: \"success\",//训练状态，包括InProgress、Canceled、Failed、success\r\n                startTime: 2020,//训练开始的时间\r\n                accuracy: 2, // 还未完成训练，准确率为 0\r\n                loss: 1, // 还未完成训练，损失值为 0\r\n            },\r\n            {\r\n                id: 1,\r\n                name: 22,//用户模型的名字\r\n                status: \"success\",//训练状态，包括InProgress、Canceled、Failed、success\r\n                startTime: 2020,//训练开始的时间\r\n                accuracy: 2, // 还未完成训练，准确率为 0\r\n                loss: 1, // 还未完成训练，损失值为 0\r\n            },\r\n            {\r\n                id: 1,\r\n                name: 22,//用户模型的名字\r\n                status: \"success\",//训练状态，包括InProgress、Canceled、Failed、success\r\n                startTime: 2020,//训练开始的时间\r\n                accuracy: 2, // 还未完成训练，准确率为 0\r\n                loss: 1, // 还未完成训练，损失值为 0\r\n            },\r\n            {\r\n                id: 1,\r\n                name: 22,//用户模型的名字\r\n                status: \"success\",//训练状态，包括InProgress、Canceled、Failed、success\r\n                startTime: 2020,//训练开始的时间\r\n                accuracy: 2, // 还未完成训练，准确率为 0\r\n                loss: 1, // 还未完成训练，损失值为 0\r\n            },\r\n            {\r\n                id: 1,\r\n                name: 22,//用户模型的名字\r\n                status: \"success\",//训练状态，包括InProgress、Canceled、Failed、success\r\n                startTime: 2020,//训练开始的时间\r\n                accuracy: 2, // 还未完成训练，准确率为 0\r\n                loss: 1, // 还未完成训练，损失值为 0\r\n            },\r\n            {\r\n                id: 1,\r\n                name: 22,//用户模型的名字\r\n                status: \"success\",//训练状态，包括InProgress、Canceled、Failed、success\r\n                startTime: 2020,//训练开始的时间\r\n                accuracy: 2, // 还未完成训练，准确率为 0\r\n                loss: 1, // 还未完成训练，损失值为 0\r\n            },\r\n            {\r\n                id: 1,\r\n                name: 22,//用户模型的名字\r\n                status: \"success\",//训练状态，包括InProgress、Canceled、Failed、success\r\n                startTime: 2020,//训练开始的时间\r\n                accuracy: 2, // 还未完成训练，准确率为 0\r\n                loss: 1, // 还未完成训练，损失值为 0\r\n            },\r\n            {\r\n                id: 1,\r\n                name: 22,//用户模型的名字\r\n                status: \"success\",//训练状态，包括InProgress、Canceled、Failed、success\r\n                startTime: 2020,//训练开始的时间\r\n                accuracy: 2, // 还未完成训练，准确率为 0\r\n                loss: 1, // 还未完成训练，损失值为 0\r\n            }, */\r\n\r\n        ]); // 展示训练任务的列表数据\r\n        let form = reactive({\r\n            modelName: \"\",//算法名称\r\n            userModelName: \"\",\r\n            featuresNum: \"\",\r\n            labelsNum: \"\"\r\n        }); // 创建训练任务的表单数据\r\n        /* let intervalIds = reactive([]) */\r\n        /*   let socket = null; // WebSocket 对象 */\r\n\r\n        // 处理文件上传事件\r\n        let filename = null;\r\n        let fileUploadRef = ref(null);\r\n        const handleFileChange = (file) => {\r\n            formData.delete('file');\r\n            filename = file.name;\r\n            formData.append('file', file.raw, file.name)\r\n            console.log(file.raw)\r\n        };\r\n        const checkModelName = () => {\r\n            if (form.userModelName === '') {\r\n                ElNotification({\r\n                    type: 'error',\r\n                    message: '模型名不能为空'\r\n                })\r\n            } else if (!/^\\w{6,20}$/.test(form.userModelName)) {\r\n                ElNotification({\r\n                    type: \"error\",\r\n                    message: \"模型名称由6-20位字母数字组成\",\r\n                });\r\n                return;\r\n            }\r\n        }\r\n         const getFormattedTime = () => {\r\n            const currentDate = new Date();\r\n            const month = String(currentDate.getMonth() + 1).padStart(2, '0');\r\n            const day = String(currentDate.getDate()).padStart(2, '0');\r\n            const hours = String(currentDate.getHours()).padStart(2, '0');\r\n            const minutes = String(currentDate.getMinutes()).padStart(2, '0');\r\n            const formattedTime = `${month}-${day} ${hours}:${minutes}`;\r\n            return formattedTime.toString();\r\n        }\r\n        // 创建训练任务\r\n        const createTrain = () => {\r\n            // 校验表单数据是否合法\r\n            if (form.modelName === \"\" || form.userModelName === \"\" || form.featuresNum === \"\" || form.labelsNum === \"\" || !filename) {\r\n\r\n                ElNotification({\r\n                    type: \"error\",\r\n                    message: \"请填写完整的训练任务信息\",\r\n                });\r\n                return;\r\n            }\r\n            trainTasks.unshift({\r\n                id: null,\r\n                name: form.userModelName,\r\n                status: \"in_progress\",\r\n                startTime: getFormattedTime(),\r\n                accuracy: 0,\r\n                loss: 0\r\n            })\r\n            console.log(trainTasks);\r\n            const time=getFormattedTime();\r\n            formData.append('create_time',time);\r\n            // 将数据添加到 FormData 中\r\n            formData.append(\"algorithm\", form.modelName);//算法名称\r\n            formData.append(\"model_name\", form.userModelName);//用户模型的名字\r\n            formData.append('featuresNum', form.featuresNum);//特征值数\r\n            formData.append('labelsNum', form.labelsNum);//标签范围\r\n            console.log(formData.get('file'))\r\n            // 将所有文件或文件数据逐个添加到 FormData 中\r\n            /* for (let i = 0; i < fileData.value.length; i++) { */\r\n\r\n            /* } */\r\n            // 发送 POST 请求创建训练任务\r\n            authInstance\r\n                .post(\"upload/train/\", formData,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data',\r\n                    }\r\n                })//需要返回 模型名modelName,训练状态status,startTime开始时间，accuracy准确率，loss损失值\r\n                .then((response) => {\r\n                    // 创建成功，刷新训练任务列表\r\n                    \r\n                    getTrainTasks();\r\n                    console.log('--------------------------','yes,train了')\r\n                    ElNotification({ type: \"success\", message: \"创建训练任务成功\" });\r\n                    // 获取后端返回的任务数据，添加到 trainTasks 数组中\r\n                    const newTask = response.data;\r\n                    trainTasks.push({\r\n                        /*   taskid: newTask.taskid,//任务id */\r\n                        id: newTask.id,\r\n                        name: newTask.model_name,//用户模型的名字\r\n                        status: \"in_progress\",//训练状态，包括InProgress、Canceled、Failed、success\r\n                        startTime: newTask.create_time,//训练开始的时间\r\n                        accuracy: 0, // 还未完成训练，准确率为 0\r\n                        loss: 0, // 还未完成训练，损失值为 0\r\n                    });\r\n                   /*  startPolling(newTask.id); */\r\n                    // 重置表单数据和已选择的文件\r\n                    form.userModelName = \"\";\r\n                    form.featuresNum = \"\";\r\n                    form.labelsNum = \"\";\r\n                    form.modelName = \"\";\r\n                    filename = '';\r\n                    /*  selectedFileName.value = \"\"; */\r\n                    const { fileUpload } = this.$refs;\r\n                    if (fileUpload) {\r\n                        fileUpload.clearFiles();\r\n                    }\r\n\r\n                })\r\n                .catch((error) => {\r\n                    const status = error.response.status;\r\n                    if (status === 401) {\r\n                        ElNotification({\r\n                            type: 'error',\r\n                            message: \"未校验，请重新登录！\"\r\n                        })\r\n                        router.push('/login');\r\n                    }\r\n                    else {\r\n                        const errorMsg = error.response.data.error_msg;\r\n                        ElNotification({ type: \"error\", message: errorMsg });\r\n                        console.error(error);\r\n                    }\r\n                })\r\n                .finally(() => {\r\n                    // 清空 FormData 中的数据\r\n                    /*   formData.delete(\"model\"); */\r\n                    formData.delete(\"name\");\r\n                    formData.delete(\"file\");\r\n                    formData.delete(\"algorithm\");\r\n                    formData.delete('featuresNum');\r\n                    formData.delete('labelsNum');\r\n                     filename = '';\r\n                });\r\n        };\r\n\r\n        // 刷新训练任务列表\r\n        const getTrainTasks = () => {\r\n            authInstance\r\n                .get(\"upload/find_train/\")\r\n                .then((response) => {\r\n                    trainTasks=[];\r\n                    const data = response.data;\r\n                    data.forEach((item) => {\r\n                        const traintask = {\r\n                            id: item.train_id,\r\n                            name: item.model_name,\r\n                            status: item.status,\r\n                            startTime: item.create_time,\r\n                            accuracy: item.Accuracy,\r\n                            loss: item.MacroF1\r\n                        }\r\n                        trainTasks.push(traintask)\r\n                    })\r\n                })\r\n                .catch((error) => {\r\n                    const status = error.response.status;\r\n                    if (status === 401) {\r\n                        ElNotification({\r\n                            type: 'error',\r\n                            message: \"未校验，请重新登录！\"\r\n                        })\r\n                        router.push('/login')\r\n                    }\r\n                    else {\r\n                        const errorMsg = error.response.data.error_msg;\r\n                        ElNotification({ type: \"error\", message: errorMsg });\r\n                        console.error(error);\r\n                    }\r\n                });\r\n        };//修改一下，自己弄\r\n\r\n        /* // 取消训练任务\r\n        const cancelTrain = (id) => {\r\n            authInstance\r\n                .put(`/user/train/${id}/cancel`)\r\n                .then((response) => {\r\n\r\n                    // 取消成功，刷新训练任务列表\r\n                    console.log(response);\r\n                    getTrainTasks();\r\n                    ElNotification({ type: \"success\", message: \"取消训练任务成功\" });\r\n\r\n                })\r\n                .catch((error) => {\r\n                    const status = error.response.status;\r\n                    if (status === 401) {\r\n                        ElNotification({\r\n                            type: 'error',\r\n                            message: \"未校验，请重新登录！\"\r\n                        })\r\n                        router.push('/login')\r\n                    }\r\n                    else {\r\n                        const errorMsg = error.response.data.error_msg;\r\n                        ElNotification({ type: \"error\", message: errorMsg });\r\n                        console.error(error);\r\n                    }\r\n                });\r\n        }; */\r\n\r\n        /*  // 创建 WebSocket 连接并进行订阅\r\n         let username=getUser();\r\n         let token = getToken(); // 从本地存储中获取 Token\r\n         const createWebSocket = () => {\r\n             socket = new WebSocket(`ws://yourserver.com/yourwebsocket/?token=${token}`);//路径\r\n \r\n             socket.onopen = () => {\r\n                 // 连接成功后向后端发送订阅请求\r\n                 const taskid = trainTasks.map((task) => task.id);\r\n                 socket.send(JSON.stringify({ action: \"subscribe\", data:{username:username,taskid:taskid}}));\r\n             };\r\n \r\n             socket.onmessage = (event) => {\r\n                 // 接收到订阅的消息后更新页面显示\r\n                 const message = JSON.parse(event.data);\r\n                 if (message.action === \"update\") {\r\n                     const updateData = message.data;\r\n                     const updateTask = trainTasks.find((task) => task.id === updateData.id);//{name,status,accuracy,loss}\r\n                     if (updateTask) {\r\n                         updateTask.status = updateData.status;\r\n                         updateTask.accuracy = updateData.accuracy;\r\n                         updateTask.loss = updateData.loss;\r\n                     }\r\n                 }\r\n             };\r\n \r\n             socket.onclose = () => {\r\n                 console\r\n                 'try to reconnect';\r\n                 setTimeout(() => {\r\n                     createWebSocket();\r\n                 }, 3000);\r\n             };\r\n         };\r\n \r\n         // 取消订阅并关闭 WebSocket 连接\r\n         const closeWebSocket = () => {\r\n             if (socket && socket.readyState === WebSocket.OPEN) {\r\n                 const taskid = trainTasks.map((task) => task.id);\r\n                 socket.send(JSON.stringify({ action: \"unsubscribe\", data: taskid }));\r\n                 socket.close();\r\n             }\r\n         }; */\r\n\r\n        // 取消创建训练任务，重置表单数据和已选择的文件\r\n        const cancel = () => {\r\n            form.userModelName = \"\";\r\n\r\n            form.featuresNum = \"\";\r\n            form.labelsNum = \"\";\r\n            form.modelName = \"\";\r\n             filename = '';\r\n            formData.delete('file');\r\n            /*    selectedFileName.value = \"\"; */\r\n            if (fileUploadRef.value) {\r\n                const { fileUpload } = fileUploadRef.value;\r\n                if (fileUpload) {\r\n                    fileUpload.clearFiles();\r\n                }\r\n            }\r\n\r\n        };\r\n       /*  const startPolling = (taskid) => {\r\n            const getstatus = setInterval(() => {\r\n                authInstance.post('upload/cur_train/', { taskid:parseInt(taskid) })\r\n                    .then(response => {\r\n                        const updateData = response.data;\r\n                        if (updateData) {\r\n                            const updateTask = trainTasks.find((task) => task.id === taskid);//{name,status,accuracy,loss}\r\n                            updateTask.status = updateData.status;\r\n                            updateTask.accuracy = updateData.Accuracy;\r\n                            updateTask.loss = updateData.MacroF1;\r\n                            if (updateData.status !== 'in_progress') {\r\n                                stopPollingByTaskId(taskid);\r\n                                getTrainTasks();//实际上只需要返回当前任务的状态，然后就可以实现停止\r\n                            }\r\n                        }\r\n\r\n                    })\r\n                    .catch(error => {\r\n                        const status = error.response.status;\r\n                        if (status === 401) {\r\n                            ElNotification({\r\n                                type: 'error',\r\n                                message: \"未校验，请重新登录！\"\r\n                            })\r\n                            router.push('/login')\r\n                        }\r\n                        else {\r\n                            const errorMsg = error.response.data.error_msg;\r\n                            ElNotification({ type: \"error\", message: errorMsg });\r\n                            console.error(error);\r\n                        }\r\n                    })\r\n            }, 1000);\r\n            intervalIds.push({\r\n                getstatus,\r\n                taskid\r\n            });\r\n        }\r\n        const stopPolling = () => {\r\n            intervalIds.forEach((timerObj) => {\r\n                clearInterval(timerObj.getstatus); // 清除所有定时器\r\n            });\r\n            intervalIds = []; // 清空数组\r\n        }\r\n        const stopPollingByTaskId = (taskId) => {\r\n            const timerObj = intervalIds.find(timer => timer.taskid === taskId); // 查找任务ID对应的timer对象\r\n            if (timerObj) {\r\n                clearInterval(timerObj.getstatus); // 停止对应的定时器\r\n                intervalIds = intervalIds.filter(timer => timer !== timerObj); // 从数组中删除对应的timer对象\r\n            }\r\n        }; */\r\n        const modelURL = ref('')\r\n        const downloadModel = (taskid) => {\r\n            const formData=new FormData();\r\n            formData.append('taskid',taskid);\r\n            authInstance.post('/upload/model_download/',formData)\r\n                .then((response) => {\r\n                    modelURL.value = response.data;\r\n                    const link = document.createElement('a')\r\n                    link.href = modelURL.value\r\n                    link.style.display = 'none'\r\n                    document.body.appendChild(link)\r\n                    link.click()\r\n                    document.body.removeChild(link)\r\n\r\n                })\r\n                .catch(error => {\r\n                    const status = error.response.status;\r\n                    if (status === 401) {\r\n                        ElNotification({\r\n                            type: 'error',\r\n                            message: '未校验，请重新登录！'\r\n                        })\r\n                        router.push('/login')\r\n                    }\r\n                    else {\r\n                        const errorMsg = error.response.data.error_msg;\r\n                        ElNotification({\r\n                            type: 'error',\r\n                            message: errorMsg\r\n                        })\r\n                    }\r\n                })\r\n        }\r\n        // 初始化页面\r\n        getTrainTasks();\r\n\r\n        /*  // 创建 WebSocket 连接\r\n         createWebSocket(); */\r\n\r\n        // 页面销毁时取消订阅并关闭 WebSocket 连接\r\n       /*  const destroy = () => {\r\n            stopPolling();\r\n        };\r\n        onUnmounted(destroy); */\r\n        return {\r\n            models,\r\n            formData,\r\n            downloadModel,\r\n            modelURL,\r\n            /*   selectedFileName, */\r\n            trainTasks,\r\n\r\n            form,\r\n            fileUploadRef,\r\n            handleFileChange,\r\n\r\n\r\n            createTrain,\r\n            getTrainTasks,\r\n            /* cancelTrain, */\r\n            cancel,\r\n            /* destroy, */\r\n            checkModelName\r\n\r\n        };\r\n    }\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.data {\r\n    border-bottom: 1px dashed #ccc\r\n}\r\n\r\n.container {\r\n    max-width: 1200px;\r\n    margin: auto;\r\n    padding: 24px;\r\n    position: relative;\r\n}\r\n\r\n.choseFile {\r\n    position: absolute;\r\n    top: 5px;\r\n    left: 0px;\r\n}\r\n\r\n.el-upload__tip {\r\n    position: absolute;\r\n    top: 20px;\r\n    left: 0px;\r\n}\r\n</style>","import { render } from \"./TrainModel.vue?vue&type=template&id=3ad5d9aa&scoped=true\"\nimport script from \"./TrainModel.vue?vue&type=script&lang=js\"\nexport * from \"./TrainModel.vue?vue&type=script&lang=js\"\n\nimport \"./TrainModel.vue?vue&type=style&index=0&id=3ad5d9aa&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\0故障分类0\\\\FaultClassification\\\\faultc\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3ad5d9aa\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"container\">\r\n        <h3>开始预测</h3>\r\n        <!-- 上传文件组件 -->\r\n        <div class=\"data\">\r\n            <el-form>\r\n                <el-form-item label=\"上传文件\">\r\n                    <el-upload ref=\"fileUpload\" :on-change=\"handleFileChange\" :show-file-list=\"false\" :auto-upload=\"false\"  accept=\".csv\" :multiple=\"false\">\r\n                        <el-button size=\"small\" type=\"primary\" class=\"choseFile\">选择文件</el-button>\r\n                        <div class=\"el-upload__tip\">支持 .csv 格式文件</div>\r\n                    </el-upload>\r\n                </el-form-item>\r\n            </el-form>\r\n            <!-- 创建测试任务的表单 -->\r\n            <div class=\"modelCard\">\r\n                <div class=\"choseModel\">\r\n                    <span style=\"font-size: 14px; color: var(--el-text-color-regular);margin-right:12px\">选择模型</span>\r\n                    <el-select label=\"选择模型\" v-model=\"form.modelid\" @change=\"handleModelChange(form.modelid)\">\r\n                        <el-option :value=\"model.id\" :label=\"model.name\" v-for=\"model in models\" :key=\"model.id\">\r\n                            {{ model.name }}\r\n                        </el-option>\r\n                    </el-select>\r\n                </div>\r\n                <div class=\"showModel\" v-if=\"Object.keys(selectedModel).length !== 0\">\r\n                    <el-card shadow=\"hover\">\r\n                        <div class=\"card-item\">\r\n                            <div>模型名称：{{ selectedModel.name }}</div>\r\n                            <div class=\"card-content-item\">特征值数: {{ selectedModel.featuresNum }}</div>\r\n                        </div>\r\n                    </el-card>\r\n                </div>\r\n            </div>\r\n            <el-form>\r\n                <el-form-item label=\"特征值数\">\r\n                    <el-input type=\"number\" v-model=\"form.featuresNum\" placeholder=\"请输入特征值数\" style=\"width:215px\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"createPrediction\">确定创建</el-button>\r\n                    <el-button @click=\"cancel\">取消创建</el-button>\r\n                </el-form-item>\r\n\r\n            </el-form>\r\n        </div>\r\n\r\n        <h3 style=\"margin-top:20px;margin-bottom:10px\">测试结果</h3>\r\n        <!-- 展示训练任务的列表 -->\r\n        <el-table :data=\"predictionTasks\" style=\"max-width: 1024px;\" :header-cell-style=\"{ backgroundColor: '#f5f7fa' }\">\r\n            <el-table-column prop=\"name\" label=\"预测任务\"></el-table-column>\r\n            <el-table-column prop=\"status\" label=\"预测状态\">\r\n                <template #default=\"{ row }\">\r\n                    <span v-if=\"row.status === ''\">等待中</span>\r\n                    <span v-else-if=\"row.status === 'in_progress'\">预测中</span>\r\n                    <span v-else-if=\"row.status === 'terminated'\">已取消</span>\r\n                    <span v-else-if=\"row.status === 'exception'\">预测失败</span>\r\n                    <span v-else-if=\"row.status === 'success'\">已完成</span>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"startTime\" label=\"开始时间\"></el-table-column>\r\n            <el-table-column label=\"操作\">\r\n                <template #default=\"{ row }\">\r\n                    <el-button v-if=\"row.status === 'success'\" type=\"primary\" @click=\"showCharts(row.id)\">可视化展示</el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { reactive, ref, } from \"vue\";\r\n\r\nimport { ElNotification } from \"element-plus\";\r\nimport { authInstance } from \"@/utils/axios\";\r\nimport router from '@/router';\r\nexport default {\r\n    setup() {\r\n        let models = reactive([\r\n           /*  {\r\n                id: 22,\r\n                name: '33',\r\n                featuresNum: 107,\r\n            } */\r\n        ]);//存储用户模型{name,featuresNum,createTime}\r\n        let formData = new FormData(); // 用于发送 POST 请求的 FormData\r\n        /*  const selectedFileName = ref(''); // 选中的文件名 */\r\n        let predictionTasks = reactive([\r\n          /*   {\r\n                id: 1,//任务id，同时根据任务id获取结果\r\n                name: 'ww2',\r\n                status: \"success\",//通过websocket获取状态\r\n                startTime: 2020,\r\n            },\r\n            {\r\n                id: 1,//任务id，同时根据任务id获取结果\r\n                name: 'ww2',\r\n                status: \"in_progress\",//通过websocket获取状态\r\n                startTime: 2020,\r\n            }, */\r\n        ]); // 展示训练任务的列表数据\r\n\r\n        let form = reactive({\r\n            modelid: \"\",\r\n            featuresNum: \"\"\r\n        })\r\n       /*  let intervalIds = reactive([]) */\r\n        let selectedModel = ref({});\r\n        /*   let socket = null; // WebSocket 对象 */\r\n        const getUserModels = () => {\r\n            authInstance\r\n                .get(\"upload/find_model/\")//需要models数组，每个里面是一个model对象，包含id,name和featuresNum和createTime属性\r\n                .then((response) => {\r\n                    const data = response.data;\r\n                    console.log(data);\r\n                    models=data.map(item=>( {\r\n                            id: item.model_id,\r\n                            name: item.model_name,\r\n                            featuresNum: item.featuresNum\r\n                    }));\r\n                    console.log(\"------------------------\",models)\r\n                })\r\n                .catch((error) => {\r\n                    const status = error.response.status;\r\n                    if (status === 401) {\r\n                        ElNotification({\r\n                            type: 'error',\r\n                            message: \"未校验，请重新登录！\"\r\n                        })\r\n                        router.push('/login')\r\n                    }\r\n                    else {\r\n                        const errorMsg = error.response.data.error_msg;\r\n                        ElNotification({ type: \"error\", message: errorMsg });\r\n                        console.error(error);\r\n                    }\r\n                });\r\n        }\r\n        function handleModelChange(value) {\r\n            selectedModel.value = models.find((model) => model.id === value);\r\n        }\r\n        const showCharts = (id) => {\r\n            router.push({ path: `/ResultsPage/${id}` });\r\n        }\r\n        // 处理文件上传事件\r\n        let filename=null;\r\n        let fileUploadRef = ref(null);\r\n        const handleFileChange = (file) => {\r\n            formData.delete('file');\r\n            filename=file.name;\r\n            formData.append('file',file.raw,file.name)\r\n            console.log(file.raw)\r\n        };\r\n        const getFormattedTime=()=> {\r\n            const currentDate = new Date();\r\n            const month = String(currentDate.getMonth() + 1).padStart(2, '0');\r\n            const day = String(currentDate.getDate()).padStart(2, '0');\r\n            const hours = String(currentDate.getHours()).padStart(2, '0');\r\n            const minutes = String(currentDate.getMinutes()).padStart(2, '0');\r\n            const formattedTime = `${month}-${day} ${hours}:${minutes}`;\r\n            return formattedTime.toString();\r\n        }\r\n\r\n        // 创建预测任务\r\n        const createPrediction = () => {\r\n            if (form.modelid === \"\" || form.featuresNum === \"\"||!filename) {\r\n                ElNotification({\r\n                    type: \"error\",\r\n                    message: \"请填写完整的训练任务信息\",\r\n                });\r\n                return;\r\n            }\r\n            formData.append('model_id', form.modelid);\r\n            formData.append('featuresNum', form.featuresNum);\r\n\r\n            // 将所有文件或文件数据逐个添加到 FormData 中\r\n            /* for (let i = 0; i < fileData.value.length; i++) { */\r\n            /*   } */\r\n            console.log(formData.get('file'));\r\n            getPredictionTasks();\r\n            predictionTasks.unshift(\r\n                {\r\n                    id:null,\r\n                    name:filename,\r\n                    status:\"in_progress\",\r\n                    startTime: getFormattedTime()\r\n                }\r\n            );\r\n            const time= getFormattedTime();\r\n            formData.append('create_time',time);\r\n            authInstance\r\n                .post('upload/test/', formData,{\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data',\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    /* if (response.data.status === 200) {//或者所有都有success，true就是正确 */\r\n                    getPredictionTasks();\r\n                    ElNotification({\r\n                        type: 'success',\r\n                        message: '创建预测任务成功'\r\n                    })\r\n                    const newtask = response.data.tasks;\r\n                    predictionTasks.push({\r\n                        id: newtask.id,//任务id，同时根据任务id获取结果\r\n                        name: filename,\r\n                        status: \"in_progress\",\r\n                        startTime: newtask.create_time\r\n                    });\r\n                  /*   startPolling(newtask.id); */\r\n                    fileUploadRef.value.clearFiles(); // 清空上传列表\r\n                    form.featuresNum = '';\r\n                    form.modelid = '';\r\n                    filename='';\r\n                    selectedModel.value = {};\r\n                    const { fileUpload } = this.$refs;\r\n                    if (fileUpload) {\r\n                        fileUpload.clearFiles();\r\n                    }\r\n                    /*   } */\r\n\r\n                })\r\n                .catch((error) => {\r\n                    const status = error.response.status;\r\n                    if (status === 401) {\r\n                        ElNotification({\r\n                            type: 'error',\r\n                            message: \"未校验，请重新登录！\"\r\n                        })\r\n                        router.push('/login')\r\n                    }\r\n                    else {\r\n                        const errorMsg = error.response.data.error_msg;\r\n                        ElNotification({ type: \"error\", message: errorMsg });\r\n                        console.error(error);\r\n                    }\r\n                })\r\n                .finally(() => {\r\n                    //清空formData\r\n                    formData.delete('model_id');\r\n                    formData.delete('file');\r\n                    formData.delete('featuresNum');\r\n                    filename='';\r\n                })\r\n\r\n        };\r\n        const getPredictionTasks = () => {\r\n           \r\n            authInstance\r\n                .get(\"upload/find_test/\")\r\n                .then((response) => {\r\n                     predictionTasks = [];\r\n                    const data = response.data;\r\n                    data.forEach((item) => {\r\n                        const predictiontask = {\r\n                            id: item.test_id,\r\n                            name: item.name,\r\n                            status: item.status,\r\n                            startTime: item.create_time\r\n                        }\r\n                        predictionTasks.push(predictiontask);\r\n                    })\r\n                })\r\n                .catch((error) => {\r\n                    const status = error.response.status;\r\n                    if (status === 401) {\r\n                        ElNotification({\r\n                            type: 'error',\r\n                            message: \"未校验，请重新登录！\"\r\n                        })\r\n                        router.push('/login')\r\n                    }\r\n                    else {\r\n                        const errorMsg = error.response.data.error_msg;\r\n                        ElNotification({ type: \"error\", message: errorMsg });\r\n                        console.error(error);\r\n                    }\r\n                });\r\n        }\r\n        /*  //取消预测任务\r\n         const cancelPredict = (id) => {\r\n             authInstance\r\n                 .put(`/user/test/${id}/cancel/`)\r\n                 .then((response) => {\r\n                     if (response.data.status === 200) {\r\n                         getPredictionTasks();\r\n                         ElNotification({ type: 'success', message: '取消预测任务成功' })\r\n                     }\r\n                 })\r\n                 .catch((error) => {\r\n                     const status = error.response.status;\r\n                     if (status === 401) {\r\n                         ElNotification({\r\n                             type: 'error',\r\n                             message: \"未校验，请重新登录！\"\r\n                         })\r\n                         router.push('/login')\r\n                     }\r\n                     else {\r\n                         const errorMsg = error.response.data.error_msg;\r\n                         ElNotification({ type: \"error\", message: errorMsg });\r\n                         console.error(error);\r\n                     }\r\n                 });\r\n         } */\r\n\r\n        /*  //创建WebSocket连接，订阅\r\n         const createWebSocket = () => {\r\n             socket = new WebSocket(`ws://${window.location.host}/user/test/updates`);//路径\r\n \r\n             socket.onopen = () => {\r\n                 //连接成功后向后端发送订阅消息\r\n                 const taskIds = predictionTasks.map((task) => task.id);\r\n                 socket.send(JSON.stringify({ action: \"subscribe\", data: taskIds }));\r\n             };\r\n             socket.onmessage = (event) => {\r\n                 // 接收到订阅的消息后更新页面显示\r\n                 const message = JSON.parse(event.data);\r\n                 if (message.action === \"update\") {\r\n                     const updateData = message.data;\r\n                     const updateTask = predictionTasks.find((task) => task.id === updateData.id);//{id,status}\r\n                     if (updateTask) {\r\n                         updateTask.status = updateData.status;\r\n                     }\r\n                 }\r\n             };\r\n \r\n             socket.onclose = () => {\r\n                 console.log('try to reconnect');\r\n                 setTimeout(() => {\r\n                     createWebSocket();\r\n                 }, 3000);\r\n             };\r\n         };\r\n         // 取消订阅并关闭 WebSocket 连接\r\n         const closeWebSocket = () => {\r\n             if (socket && socket.readyState === WebSocket.OPEN) {\r\n                 const taskIds = predictionTasks.map((task) => task.id);\r\n                 socket.send(JSON.stringify({ action: \"unsubscribe\", data: taskIds }));\r\n                 socket.close();\r\n             }\r\n         }; */\r\n\r\n        // 取消创建训练任务，重置表单数据和已选择的文件\r\n        const cancel = () => {\r\n            form.modelid = \"\";\r\n            form.featuresNum = \"\";\r\n            selectedModel.value = {};\r\n            fileUploadRef.value.clearFiles(); // 清空上传列表\r\n            filename='';\r\n            formData.delete('file');\r\n        };\r\n     /*    const startPolling = (taskid) => {\r\n            const getstatus = setInterval(() => {\r\n                authInstance.post('upload/cur_test/', { taskid:parseInt(taskid) })\r\n                    .then(response => {\r\n                        const updateData = response.data;\r\n                        if (updateData) {\r\n                            const updateTask = predictionTasks.find((task) => task.id === taskid);//{name,status,accuracy,loss}\r\n                            updateTask.status = updateData.status;\r\n                            updateTask.accuracy = updateData.Accuracy;//其实只要status就行了\r\n                            updateTask.loss = updateData.MacroF1;\r\n                            if (updateData.status !== 'in_progress') {\r\n                                stopPollingByTaskId(taskid);\r\n                                getPredictionTasks();\r\n                            }\r\n                        }\r\n\r\n                    })\r\n                    .catch(error => {\r\n                        const status = error.response.status;\r\n                        if (status === 401) {\r\n                            ElNotification({\r\n                                type: 'error',\r\n                                message: \"未校验，请重新登录！\"\r\n                            })\r\n                            router.push('/login')\r\n                        }\r\n                        else {\r\n                            const errorMsg = error.response.data.error_msg;\r\n                            ElNotification({ type: \"error\", message: errorMsg });\r\n                            console.error(error);\r\n                        }\r\n                    })\r\n            }, 1000);\r\n            intervalIds.push({\r\n                getstatus,\r\n                taskid\r\n            });\r\n        }\r\n        const stopPolling = () => {\r\n            intervalIds.forEach((timerObj) => {\r\n                clearInterval(timerObj.getstatus); // 清除所有定时器\r\n            });\r\n            intervalIds = []; // 清空数组\r\n        }\r\n        const stopPollingByTaskId = (taskId) => {\r\n            const timerObj = intervalIds.find(timer => timer.taskid === taskId); // 查找任务ID对应的timer对象\r\n            if (timerObj) {\r\n                clearInterval(timerObj.getstatus); // 停止对应的定时器\r\n                intervalIds = intervalIds.filter(timer => timer !== timerObj); // 从数组中删除对应的timer对象\r\n            }\r\n        }; */\r\n        // 初始化页面\r\n        getUserModels();\r\n        getPredictionTasks();\r\n        /*   // 创建 WebSocket 连接\r\n          createWebSocket();\r\n  \r\n          // 页面销毁时取消订阅并关闭 WebSocket 连接\r\n          const destroy = () => {\r\n              closeWebSocket();\r\n          };\r\n  \r\n          onUnmounted(destroy); */\r\n       /*  const destroy = () => {\r\n            stopPolling();\r\n        };\r\n        onUnmounted(destroy); */\r\n        return {\r\n            models,\r\n            formData,\r\n            predictionTasks,\r\n            fileUploadRef,\r\n            form,\r\n            selectedModel,\r\n            showCharts,\r\n            handleFileChange,\r\n            handleModelChange,\r\n            createPrediction,\r\n            getPredictionTasks,\r\n            /*  cancelPredict, */\r\n            cancel,\r\n           /*  destroy, */\r\n\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.data {\r\n    border-bottom: 1px dashed #ccc\r\n}\r\n\r\n.container {\r\n    max-width: 1200px;\r\n    margin: auto;\r\n    padding: 24px;\r\n    position: relative;\r\n}\r\n\r\n.choseFile {\r\n    position: absolute;\r\n    top: 5px;\r\n    left: 1px;\r\n}\r\n\r\n.el-upload__tip {\r\n    position: absolute;\r\n    top: 20px;\r\n    left: 3px;\r\n}\r\n\r\n.modelCard {\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n    position: relative;\r\n    height: 80px;\r\n}\r\n\r\n.choseModel {\r\n    position: absolute;\r\n    top: 20px;\r\n\r\n}\r\n\r\n.showModel {\r\n    position: absolute;\r\n    left: 300px;\r\n    font-size: 14px;\r\n}\r\n\r\n.card-item {\r\n    width: 200px;\r\n    height: 40px;\r\n    text-align: left;\r\n}\r\n</style>","import { render } from \"./ModelPrediction.vue?vue&type=template&id=55cdb765&scoped=true\"\nimport script from \"./ModelPrediction.vue?vue&type=script&lang=js\"\nexport * from \"./ModelPrediction.vue?vue&type=script&lang=js\"\n\nimport \"./ModelPrediction.vue?vue&type=style&index=0&id=55cdb765&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\0故障分类0\\\\FaultClassification\\\\faultc\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55cdb765\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"container\">\r\n        <!-- 下载按钮组件 -->\r\n        <div class=\"download-btns\">\r\n            <el-button type=\"primary\" @click=\"downloadTableData\">\r\n                下载结果\r\n            </el-button>\r\n            <el-button type=\"primary\" @click=\"downloadPieChart\" style=\"margin-left:65px;\">\r\n                下载图形\r\n            </el-button>\r\n        </div>\r\n        <div class=\"show\">\r\n            <!-- 表格展示部分 -->\r\n            <div class=\"table-container\">\r\n                <el-table :data=\"tableData\" class=\"table\">\r\n                    <el-table-column prop=\"sampleId\" label=\"Sample Id\"></el-table-column>\r\n                    <el-table-column prop=\"label\" label=\"Label\"></el-table-column>\r\n                </el-table>\r\n            </div>\r\n\r\n            <!-- 饼状图展示部分 -->\r\n            <canvas ref=\"pieCanvas\" class=\"pieCanvas\"></canvas>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { authInstance } from \"@/utils/axios\";\r\nimport * as echarts from \"echarts\";\r\nimport router from \"@/router\";\r\nimport { ElNotification } from \"element-plus\";\r\n\r\nexport default {\r\n    name: \"MyComponent\",\r\n    props: [\"id\"],\r\n    data() {\r\n        return {\r\n            tableData: [\r\n                /*  {\r\n                     sampleId: \"sample_001\",\r\n                     label: \"positive\",\r\n                 },\r\n                 {\r\n                     sampleId: \"sample_002\",\r\n                     label: \"negative\",\r\n                 }, */\r\n\r\n            ], // 表格数据\r\n            pieChartData: [\r\n                /*  {\r\n                     label: 'p',\r\n                     value: 22\r\n                 },\r\n                 {\r\n                     label: 'e',\r\n                     value: 22\r\n                 },\r\n                 {\r\n                     label: 'pe',\r\n                     value: 22\r\n                 },\r\n                 {\r\n                     label: 'e',\r\n                     value: 22\r\n                 },\r\n                 {\r\n                     label: 'ne',\r\n                     value: 88\r\n                 } */\r\n            ], // 饼状图数据\r\n            pieChart: null, // echarts 实例\r\n\r\n        };\r\n    },\r\n    mounted() {\r\n        const formData = new FormData();\r\n        formData.append(\"taskid\", this.id); // 将 id 添加到 FormData\r\n        // 发送请求获取文件下载链接和JSON数据\r\n        this.$nextTick(() => {\r\n            if (this.$refs.pieCanvas) {\r\n                this.renderPieChart();\r\n            }\r\n        }),\r\n\r\n            authInstance\r\n                .post(\"/upload/result_download/\", formData)\r\n                .then((res) => {\r\n                    const data = res.data;\r\n                    const tableData = Object.entries(data[0]).map(([key, value]) => ({\r\n                        sampleId: key,\r\n                        label: value,\r\n                    }));\r\n                    const pieChartData = Object.entries(data[0]).map(([key, value]) => ({\r\n                        label: key,\r\n                        value: value,\r\n                    }));\r\n\r\n\r\n                    this.tableData = tableData;\r\n                    this.pieChartData = pieChartData;\r\n                    // 渲染饼状图\r\n\r\n                })\r\n                .catch((error) => {\r\n                    const status = error.response.status;\r\n                    if (status === 401) {\r\n                        ElNotification({\r\n                            type: \"error\",\r\n                            message: \"未校验，请重新登录！\",\r\n                        });\r\n                        router.push(\"/login\");\r\n                    } else {\r\n                        const errorMsg = error.response.data.error_msg;\r\n                        ElNotification({\r\n                            type: \"error\",\r\n                            message: errorMsg,\r\n                        });\r\n                    }\r\n                });\r\n    },\r\n    methods: {\r\n        renderPieChart() {\r\n            // 初始化 echarts 实例\r\n            if (!this.$refs.pieCanvas) return;\r\n            this.pieChart = echarts.init(this.$refs.pieCanvas, null, {\r\n                devicePixelRatio: 2 // 设置devicePixelRatio为2，适用于高分辨率屏幕\r\n            });\r\n\r\n            // 配置饼状图参数\r\n            const pieData = this.pieChartData.map(item => ({ value: item.value, name: item.label }));\r\n\r\n            const option = {\r\n                grid: {\r\n                    width: '60%', // 自定义宽度\r\n                    height: '60%', // 自定义高度\r\n                    left: 'center', // 图表位置居中\r\n                },\r\n                series: [\r\n                    {\r\n                        type: 'pie',\r\n                        data: pieData,\r\n                        label: {\r\n                            show: true,\r\n                            formatter: '{b}: {c}', // 使用{b}表示name，{c}表示value\r\n                            textStyle: {\r\n                                fontSize: 14,\r\n                            },\r\n                        },\r\n                        emphasis: {\r\n                            label: {\r\n                                show: true,\r\n                                textStyle: {\r\n                                    fontSize: 1,\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                ],\r\n            };\r\n\r\n            // 渲染饼状图并自适应宽高\r\n            this.pieChart.setOption(option);\r\n            /*  window.addEventListener(\"resize\", () => {\r\n                 if (this.pieChart) {\r\n                     this.pieChart.resize();\r\n                 }\r\n             }); */\r\n        },\r\n\r\n\r\n        // 下载表格数据\r\n        downloadTableData() {\r\n            const csvContent = this.arrayToCSV(this.tableData);\r\n            const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\r\n            const downloadLink = document.createElement(\"a\");\r\n            downloadLink.href = URL.createObjectURL(blob);\r\n            downloadLink.download = \"table-data.csv\";\r\n            downloadLink.click();\r\n        },\r\n\r\n        downloadPieChart() {\r\n            if (!this.$refs.pieCanvas) return; // 确保 $refs.pieCanvas 存在\r\n\r\n            // 将 base64 数据转换为 Blob 对象\r\n            const dataURL = this.$refs.pieCanvas.toDataURL(\"image/png\");\r\n            const blob = this.dataURItoBlob(dataURL);\r\n\r\n            // 创建并下载链接\r\n            const downloadLink = document.createElement(\"a\");\r\n            downloadLink.href = URL.createObjectURL(blob);\r\n            downloadLink.download = \"pie-chart.png\";\r\n            downloadLink.click();\r\n        },\r\n\r\n        dataURItoBlob(dataURI) {\r\n            const binary = atob(dataURI.split(',')[1]);\r\n            const array = [];\r\n            for (let i = 0; i < binary.length; i++) {\r\n                array.push(binary.charCodeAt(i));\r\n            }\r\n            const mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n            return new Blob([new Uint8Array(array)], { type: mimeString });\r\n        },\r\n\r\n\r\n        arrayToCSV(data) {\r\n            const csvRows = [];\r\n            // 获取表头\r\n            const headers = Object.keys(data[0]);\r\n            csvRows.push(headers.join(\",\"));\r\n\r\n            for (const row of data) {\r\n                const values = headers.map((header) => {\r\n                    const cellValue =\r\n                        row[header] === null || row[header] === undefined ? \"\" : row[header];\r\n                    return JSON.stringify(cellValue);\r\n                });\r\n                csvRows.push(values.join(\",\"));\r\n            }\r\n\r\n            return csvRows.join(\"\\n\");\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n\r\n\r\n<style scoped>\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.container {\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.download-btns {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.show {\r\n    display: flex;\r\n    flex: 1;\r\n}\r\n\r\n.table-container {\r\n    flex: 30%;\r\n    border: 1px solid #ccc;\r\n    height: 450px;\r\n    overflow-y: scroll;\r\n}\r\n\r\n.pieCanvas {\r\n    flex: 70%;\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n}\r\n</style>\r\n\r\n\r\n","import { render } from \"./ResultsPage.vue?vue&type=template&id=01a3a3f4&scoped=true\"\nimport script from \"./ResultsPage.vue?vue&type=script&lang=js\"\nexport * from \"./ResultsPage.vue?vue&type=script&lang=js\"\n\nimport \"./ResultsPage.vue?vue&type=style&index=0&id=01a3a3f4&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\0故障分类0\\\\FaultClassification\\\\faultc\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-01a3a3f4\"]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router'\r\nimport LoginPage from '../components/LoginPage.vue'\r\nimport HomePage from '../components/HomePage.vue'\r\nimport RegisterPage from '../components/RegisterPage.vue'\r\nimport AboutPage from '../components/AboutPage.vue'\r\nimport WorkPage from '../components/WorkPage.vue'\r\nimport NotFoundComponent from '../components/NotFoundPage.vue'\r\nimport TrainModel from '@/components/TrainModel.vue'\r\nimport ModelPrediction from '@/components/ModelPrediction.vue'\r\nimport ResultsPage from '@/components/ResultsPage.vue'\r\n/* import CreateTask from '@/components/CreateTask.vue' */\r\n/* import { checkLoginStatus } from '@/utils/auth' */\r\nconst routes = [\r\n    {\r\n        path: '/:pathMatch(.*)*',\r\n        component: NotFoundComponent\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: LoginPage,\r\n\r\n    },\r\n    {\r\n        path: '/',\r\n        component: HomePage\r\n    },\r\n    {\r\n        path: '/register',\r\n        component: RegisterPage,\r\n\r\n    },\r\n    {\r\n        path: '/about',\r\n        component: AboutPage,\r\n\r\n    },\r\n    {\r\n        path: '/workspace',\r\n        component: WorkPage,\r\n        children: [\r\n            {\r\n                path: '/TrainModel',\r\n                component: TrainModel,\r\n                /* children: [\r\n                    {\r\n                        path: 'CreateTask',\r\n                        component: CreateTask\r\n                    }\r\n                ] */\r\n            },\r\n            { path: '/ResultsPage/:taskId', component: ResultsPage,props:true },\r\n            { path: '/ModelPrediction', component: ModelPrediction }\r\n        ]\r\n\r\n    },\r\n\r\n]\r\n\r\nconst router = createRouter({\r\n    history: createWebHistory(process.env.BASE_URL),\r\n    routes,\r\n})\r\n/* router.beforeEach(async (to, from, next) => {\r\n    if (to.path === '/workspace') {\r\n        const isLoggedIn = await checkLoginStatus();\r\n        if (isLoggedIn) {\r\n            next(); // 允许用户访问 /workspace 页面\r\n        } else {\r\n            alert('请先登录！');\r\n            next('/login'); // 重定向到登录页面\r\n        }\r\n    } else {\r\n        next(); // 其他路径直接跳转\r\n    }\r\n}); */\r\n\r\nexport default router;\r\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'//自动扫描里面的路由配置\nimport ElementPlus from 'element-plus'\nimport 'element-plus/theme-chalk/index.css'\n\nimport { authInstance } from './utils/axios'\n\n/* const token = getToken(); */\nconst token=localStorage.getItem('token');\nauthInstance.defaults.headers.common['Authorization'] = token ? `Bearer ${token}` : '';\n\ncreateApp(App)\n    .use(router)\n    .use(ElementPlus)\n    /* .use(store) */\n    .mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkfaultc\"] = self[\"webpackChunkfaultc\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(1369); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_router_view","name","components","__exports__","render","_createElementVNode","src","_imports_0","alt","type","_hoisted_2","_component_router_link","to","_hoisted_3","_hoisted_4","onSubmit","_cache","_withModifiers","_ctx","login","arguments","_hoisted_5","username","$event","placeholder","_hoisted_6","password","errorMessage","_hoisted_7","_toDisplayString","_hoisted_8","defineComponent","setup","ref","formData","FormData","async","append","value","response","axios","token","headers","authorization","split","localStorage","removeItem","setItem","router","path","error","errorMsg","data","error_msg","script","errors","validUsername","validPassword","confirmPassword","securityCode","securityCodeUrl","onClick","refreshSecurityCode","securityCodeInvalid","_hoisted_10","validConfirmPassword","watch","newValue","trim","isValidUsername","test","_ref","newPwd","newConfirmPwd","then","image_url","catch","ElNotification","message","console","log","alert","_component_el_container","_component_el_header","handleLogout","_component_el_aside","width","totrain","totest","_component_el_main","authInstance","interceptors","request","use","config","getItem","Authorization","Promise","reject","CancelToken","logout","post","defaults","common","success","count","countTime","setInterval","newCount","clearInterval","style","_component_el_form","_component_el_form_item","label","_component_el_upload","$setup","handleFileChange","accept","multiple","_component_el_button","size","model","form","_Fragment","_renderList","models","_createBlock","_component_el_radio","modelName","key","_component_el_input","userModelName","onBlur","checkModelName","featuresNum","labelsNum","createTrain","cancel","_component_el_table","trainTasks","backgroundColor","_component_el_table_column","prop","default","_withCtx","row","status","_hoisted_9","_ref2","_hoisted_11","accuracy","_ref3","_hoisted_12","loss","_ref4","href","modelURL","downloadModel","id","reactive","filename","fileUploadRef","file","delete","raw","getFormattedTime","currentDate","Date","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","formattedTime","toString","unshift","startTime","time","get","getTrainTasks","newTask","push","model_name","create_time","fileUpload","this","$refs","clearFiles","finally","forEach","item","traintask","train_id","Accuracy","MacroF1","taskid","link","document","createElement","display","body","appendChild","click","removeChild","_component_el_select","modelid","onChange","handleModelChange","_component_el_option","Object","keys","selectedModel","length","_component_el_card","shadow","createPrediction","predictionTasks","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","showCharts","getUserModels","map","model_id","find","getPredictionTasks","newtask","tasks","predictiontask","test_id","$options","downloadTableData","downloadPieChart","$data","tableData","props","pieChartData","pieChart","mounted","$nextTick","pieCanvas","renderPieChart","res","entries","sampleId","methods","echarts","devicePixelRatio","pieData","option","grid","height","left","series","show","formatter","textStyle","fontSize","emphasis","setOption","csvContent","arrayToCSV","blob","Blob","downloadLink","URL","createObjectURL","download","dataURL","toDataURL","dataURItoBlob","dataURI","binary","atob","array","i","charCodeAt","mimeString","Uint8Array","csvRows","join","values","header","cellValue","undefined","JSON","stringify","routes","component","NotFoundComponent","LoginPage","HomePage","RegisterPage","AboutPage","WorkPage","children","TrainModel","ResultsPage","ModelPrediction","createRouter","history","createWebHistory","process","createApp","App","ElementPlus","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","Function","e","window","obj","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}